{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      count = _useState6[0],\n      setcount = _useState6[1];\n\n  var _useState7 = useState('Hi there, how are you?'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var screenHeight = Dimensions.get('window').height;\n  var screenWidth = Dimensions.get('window').width;\n  useEffect(function () {\n    setTimeout(function () {\n      axios.get('https://api.github.com/users').then(function (response) {\n        if (response.data) {\n          setUsers(response.data);\n        }\n      }).catch(function (error) {\n        Alert.alert('❌', 'connot find data ');\n      }).finally(function () {\n        return setLoading(false);\n      });\n    }, 1000);\n  }, []);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.itemContainer,\n      onPress: function onPress() {\n        setcount(item.login);\n        navigation.navigate('About', {\n          image: item.avatar_url,\n          Name: item.login,\n          value: count\n        });\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: item.avatar_url\n        },\n        style: {\n          height: 100,\n          width: 100,\n          borderRadius: 50,\n          resizeMode: 'contain'\n        }\n      }), _jsx(Text, {\n        style: {\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n          color: 'blue'\n        },\n        children: item.login\n      })]\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: isLoading ? _jsx(ActivityIndicator, {\n      size: 60,\n      color: 'white'\n    }) : _jsx(FlatList, {\n      data: users,\n      renderItem: renderItem\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    padding: 15,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: 'gray',\n    margin: 15\n  }\n});\nexport { Home };","map":{"version":3,"names":["axios","useState","useEffect","Home","navigation","isLoading","setLoading","users","setUsers","count","setcount","message","setMessage","screenHeight","Dimensions","get","height","screenWidth","width","setTimeout","then","response","data","catch","error","Alert","alert","finally","renderItem","item","styles","itemContainer","login","navigate","image","avatar_url","Name","value","uri","borderRadius","resizeMode","fontWeight","textTransform","color","container","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","padding","borderWidth","borderColor","margin"],"sources":["D:/Web and mob app dev/mobile app/react-native-saylani/my-app/src/sacreen/Home.js"],"sourcesContent":["import {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n    TextInput,\r\n    ScrollView,\r\n    FlatList,\r\n    Dimensions,\r\n    ImageBackground,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nfunction Home({ navigation }) {\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const [users, setUsers] = useState(0);\r\n    const [count, setcount] = useState('');\r\n    const [message, setMessage] = useState('Hi there, how are you?');\r\n    // const [isLoading, setLoading] = useState(true);\r\n    const screenHeight = Dimensions.get('window').height;\r\n    const screenWidth = Dimensions.get('window').width;\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            axios\r\n                .get('https://api.github.com/users')\r\n                .then((response) => {\r\n                    if (response.data) {\r\n                        // console.log(response.data);\r\n                        setUsers(response.data);\r\n                        // console.log(response.data);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Alert.alert('❌', 'connot find data ');\r\n                })\r\n                .finally(() => setLoading(false));\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            style={styles.itemContainer}\r\n            onPress={() => {\r\n                setcount(item.login);\r\n                navigation.navigate('About', {\r\n                    image: item.avatar_url,\r\n                    Name: item.login,\r\n                    value: count,\r\n                });\r\n            }}\r\n        >\r\n            <Image\r\n                source={{ uri: item.avatar_url }}\r\n                style={{\r\n                    height: 100,\r\n                    width: 100,\r\n                    borderRadius: 50,\r\n                    resizeMode: 'contain',\r\n                }}\r\n            />\r\n\r\n            <Text\r\n                style={{\r\n                    fontWeight: 'bold',\r\n                    textTransform: 'uppercase',\r\n                    color: 'blue',\r\n                }}\r\n            >\r\n                {item.login}\r\n            </Text>\r\n        </TouchableOpacity>\r\n    );\r\n    return (\r\n        <View style={styles.container}>\r\n            {/* <Text style={{ fontSize: 32 }}>This is Home page</Text> */}\r\n            {isLoading ? (\r\n                <ActivityIndicator size={60} color={'white'} />\r\n            ) : (\r\n                <FlatList\r\n                    // isMounted={false}\r\n                    // keyExtractor={keyExtractor}\r\n                    data={users}\r\n                    // keyExtractor={(users) => users.id}\r\n                    renderItem={renderItem}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    itemContainer: {\r\n        flexDirection: 'row',\r\n        padding: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        borderColor: 'gray',\r\n        margin: 15,\r\n\r\n        // justifyContent:'center',\r\n        // alignItems:'center',\r\n        // padding:10,\r\n        // borderWidth:1\r\n    },\r\n});\r\n\r\nexport { Home };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}