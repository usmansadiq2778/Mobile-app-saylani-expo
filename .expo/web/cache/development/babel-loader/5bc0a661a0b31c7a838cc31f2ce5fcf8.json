{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Camera, CameraType } from 'expo-camera';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Cemera(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(CameraType.back),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _Camera$useCameraPerm = Camera.useCameraPermissions(),\n      _Camera$useCameraPerm2 = _slicedToArray(_Camera$useCameraPerm, 2),\n      permission = _Camera$useCameraPerm2[0],\n      requestPermission = _Camera$useCameraPerm2[1];\n\n  function toggleCameraType() {\n    setType(function (current) {\n      return current === CameraType.back ? CameraType.front : CameraType.back;\n    });\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Camera, {\n      style: styles.camera,\n      type: type,\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: toggleCameraType,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Flip Camera\"\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["Camera","CameraType","useState","Cemera","navigation","back","type","setType","useCameraPermissions","permission","requestPermission","toggleCameraType","current","front","styles","container","camera","buttonContainer","button","text"],"sources":["D:/Web and mob app dev/mobile app/react-native-saylani/my-app/src/sacreen/camera.js"],"sourcesContent":["import { Camera, CameraType } from 'expo-camera';\r\n\r\n// import { useState } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function Cemera({ navigation }) {\r\n    const [type, setType] = useState(CameraType.back);\r\n    const [permission, requestPermission] = Camera.useCameraPermissions();\r\n\r\n    // if (!permission)\r\n    //     if (!permission.granted)\r\n    function toggleCameraType() {\r\n        setType((current) =>\r\n            current === CameraType.back ? CameraType.front : CameraType.back\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Camera style={styles.camera} type={type}>\r\n                <View style={styles.buttonContainer}>\r\n                    <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={toggleCameraType}\r\n                    >\r\n                        <Text style={styles.text}>Flip Camera</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Camera>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;AAGA,SAASC,QAAT,QAAyB,OAAzB;;;;;;;AAGA,eAAe,SAASC,MAAT,OAAgC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC3C,gBAAwBF,QAAQ,CAACD,UAAU,CAACI,IAAZ,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EACA,4BAAwCP,MAAM,CAACQ,oBAAP,EAAxC;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,iBAAnB;;EAIA,SAASC,gBAAT,GAA4B;IACxBJ,OAAO,CAAC,UAACK,OAAD;MAAA,OACJA,OAAO,KAAKX,UAAU,CAACI,IAAvB,GAA8BJ,UAAU,CAACY,KAAzC,GAAiDZ,UAAU,CAACI,IADxD;IAAA,CAAD,CAAP;EAGH;;EAED,OACI,KAAC,IAAD;IAAM,KAAK,EAAES,MAAM,CAACC,SAApB;IAAA,UACI,KAAC,MAAD;MAAQ,KAAK,EAAED,MAAM,CAACE,MAAtB;MAA8B,IAAI,EAAEV,IAApC;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAEQ,MAAM,CAACG,eAApB;QAAA,UACI,KAAC,gBAAD;UACI,KAAK,EAAEH,MAAM,CAACI,MADlB;UAEI,OAAO,EAAEP,gBAFb;UAAA,UAII,KAAC,IAAD;YAAM,KAAK,EAAEG,MAAM,CAACK,IAApB;YAAA;UAAA;QAJJ;MADJ;IADJ;EADJ,EADJ;AAcH"},"metadata":{},"sourceType":"module"}