{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ImagePickerExample() {}\n\nfunction Gellery(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      console.log(result);\n\n      if (!result.cancelled) {\n        setImage(result.uri);\n      }\n    });\n\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Button, {\n      title: \"Pick an image from camera roll\",\n      onPress: pickImage\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport { Gellery };","map":{"version":3,"names":["React","useState","useEffect","ImagePicker","ImagePickerExample","Gellery","navigation","image","setImage","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","console","log","cancelled","uri","flex","alignItems","justifyContent","width","height","styles","StyleSheet","create","container"],"sources":["D:/Web and mob app dev/mobile app/react-native-saylani/my-app/src/sacreen/gallery.js"],"sourcesContent":["import {\r\n    StyleSheet,\r\n    Button,\r\n    Image,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n} from 'react-native';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nfunction ImagePickerExample() {}\r\nfunction Gellery({ navigation }) {\r\n    const [image, setImage] = useState(null);\r\n    const pickImage = async () => {\r\n        // No permissions request is necessary for launching the image library\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n\r\n        console.log(result);\r\n\r\n        if (!result.cancelled) {\r\n            setImage(result.uri);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View\r\n            style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}\r\n        >\r\n            <Button\r\n                title='Pick an image from camera roll'\r\n                onPress={pickImage}\r\n            />\r\n            {image && (\r\n                <Image\r\n                    source={{ uri: image }}\r\n                    style={{ width: 200, height: 200 }}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport { Gellery };\r\n"],"mappings":";;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;AAEA,SAASC,kBAAT,GAA8B,CAAE;;AAChC,SAASC,OAAT,OAAiC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC7B,gBAA0BL,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOM,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,SAAS;IAAA,8BAAG,aAAY;MAE1B,IAAIC,MAAM,SAASP,WAAW,CAACQ,uBAAZ,CAAoC;QACnDC,UAAU,EAAET,WAAW,CAACU,gBAAZ,CAA6BC,GADU;QAEnDC,aAAa,EAAE,IAFoC;QAGnDC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;QAInDC,OAAO,EAAE;MAJ0C,CAApC,CAAnB;MAOAC,OAAO,CAACC,GAAR,CAAYT,MAAZ;;MAEA,IAAI,CAACA,MAAM,CAACU,SAAZ,EAAuB;QACnBZ,QAAQ,CAACE,MAAM,CAACW,GAAR,CAAR;MACH;IACJ,CAdc;;IAAA,gBAATZ,SAAS;MAAA;IAAA;EAAA,GAAf;;EAgBA,OACI,MAAC,IAAD;IACI,KAAK,EAAE;MAAEa,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CADX;IAAA,WAGI,KAAC,MAAD;MACI,KAAK,EAAC,gCADV;MAEI,OAAO,EAAEf;IAFb,EAHJ,EAOKF,KAAK,IACF,KAAC,KAAD;MACI,MAAM,EAAE;QAAEc,GAAG,EAAEd;MAAP,CADZ;MAEI,KAAK,EAAE;QAAEkB,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB;IAFX,EARR;EAAA,EADJ;AAgBH;;AACD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BC,SAAS,EAAE;IACPR,IAAI,EAAE,CADC;IAEPC,UAAU,EAAE,QAFL;IAGPC,cAAc,EAAE;EAHT;AADkB,CAAlB,CAAf;AAQA,SAASnB,OAAT"},"metadata":{},"sourceType":"module"}