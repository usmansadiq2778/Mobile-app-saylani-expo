{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Map() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      var location = yield Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(MapView, {\n      style: styles.map,\n      initialRegion: {\n        latitude: 31.2908052,\n        longitude: 73.0236736,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: _jsx(Marker, {\n        coordinate: {\n          latitude: 31.2908052,\n          longitude: 73.0236736\n        }\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","MapView","Marker","Location","Map","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","styles","container","map","latitude","longitude","latitudeDelta","longitudeDelta","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"sources":["D:/Web and mob app dev/mobile app/react-native-saylani/my-app/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport * as Location from 'expo-location';\r\n\r\nexport default function Map() {\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            let { status } = await Location.requestForegroundPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                setErrorMsg('Permission to access location was denied');\r\n                return;\r\n            }\r\n\r\n            let location = await Location.getCurrentPositionAsync({});\r\n            setLocation(location);\r\n        })();\r\n    }, []);\r\n    return (\r\n        <View style={styles.container}>\r\n            <MapView\r\n                style={styles.map}\r\n                initialRegion={{\r\n                    latitude: 31.2908052,\r\n                    longitude: 73.0236736,\r\n                    latitudeDelta: 0.0922,\r\n                    longitudeDelta: 0.0421,\r\n                }}\r\n            >\r\n                <Marker\r\n                    coordinate={{\r\n                        latitude: 31.2908052,\r\n                        longitude: 73.0236736,\r\n                    }}\r\n                    // image={{ uri: 'custom_pin' }}\r\n                />\r\n            </MapView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    map: {\r\n        width: Dimensions.get('window').width,\r\n        height: Dimensions.get('window').height,\r\n    },\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC1B,gBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAgCN,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB;;EAEAT,SAAS,CAAC,YAAM;IACZ,kBAAC,aAAY;MACT,kCAAuBI,QAAQ,CAACM,iCAAT,EAAvB;MAAA,IAAMC,MAAN,yBAAMA,MAAN;;MACA,IAAIA,MAAM,KAAK,SAAf,EAA0B;QACtBF,WAAW,CAAC,0CAAD,CAAX;QACA;MACH;;MAED,IAAIH,QAAQ,SAASF,QAAQ,CAACQ,uBAAT,CAAiC,EAAjC,CAArB;MACAL,WAAW,CAACD,QAAD,CAAX;IACH,CATD;EAUH,CAXQ,EAWN,EAXM,CAAT;EAYA,OACI,KAAC,IAAD;IAAM,KAAK,EAAEO,MAAM,CAACC,SAApB;IAAA,UACI,KAAC,OAAD;MACI,KAAK,EAAED,MAAM,CAACE,GADlB;MAEI,aAAa,EAAE;QACXC,QAAQ,EAAE,UADC;QAEXC,SAAS,EAAE,UAFA;QAGXC,aAAa,EAAE,MAHJ;QAIXC,cAAc,EAAE;MAJL,CAFnB;MAAA,UASI,KAAC,MAAD;QACI,UAAU,EAAE;UACRH,QAAQ,EAAE,UADF;UAERC,SAAS,EAAE;QAFH;MADhB;IATJ;EADJ,EADJ;AAqBH;AAED,IAAMJ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC7BP,SAAS,EAAE;IACPQ,IAAI,EAAE,CADC;IAEPC,eAAe,EAAE,MAFV;IAGPC,UAAU,EAAE,QAHL;IAIPC,cAAc,EAAE;EAJT,CADkB;EAO7BV,GAAG,EAAE;IACDW,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAD/B;IAEDG,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;EAFhC;AAPwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}