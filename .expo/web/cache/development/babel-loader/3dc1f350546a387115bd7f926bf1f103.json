{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React, { useState, useEffect } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Gellery(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsMultipleSelection: true,\n        selectionLimit: 10,\n        aspect: [4, 3],\n        quality: 1\n      });\n      setIsLoading(false);\n      console.log(result);\n\n      if (!result.cancelled) {\n        setImages(result.uri ? [result.uri] : result.selected);\n      }\n    });\n\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(FlatList, {\n    data: images,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return _jsx(Image, {\n        source: {\n          uri: item.uri\n        },\n        style: {\n          width: width,\n          height: 250\n        },\n        resizeMode: contain\n      });\n    },\n    numColumns: 2,\n    keyExtractor: function keyExtractor(item) {\n      return item.uri;\n    },\n    contentContainerStyle: {\n      marginVertical: 50,\n      paddingBottom: 100,\n      paddingHorizontal: 30\n    },\n    ListHeaderComponent: isLoading ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }), _jsx(ActivityIndicator, {\n        size: 'large'\n      })]\n    }) : _jsx(Button, {\n      title: \"Pick images\",\n      onPress: pickImage\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport { Gellery };","map":{"version":3,"names":["React","useState","useEffect","ImagePicker","Gellery","navigation","images","setImages","isLoading","setIsLoading","useWindowDimensions","width","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","selectionLimit","aspect","quality","console","log","cancelled","uri","selected","item","height","contain","marginVertical","paddingBottom","paddingHorizontal","fontSize","fontWeight","textAlign","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"sources":["D:/Web and mob app dev/mobile app/react-native-saylani/my-app/src/sacreen/gallery.js"],"sourcesContent":["import {\r\n    StyleSheet,\r\n    ActivityIndicator,\r\n    Button,\r\n    Image,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Platform,\r\n    FlatList,\r\n    useWindowDimensions,\r\n} from 'react-native';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nfunction Gellery({ navigation }) {\r\n    const [images, setImages] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { width } = useWindowDimensions();\r\n    const pickImage = async () => {\r\n        setIsLoading(true);\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            // allowsEditing: true,\r\n            allowsMultipleSelection: true,\r\n            selectionLimit: 10,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        setIsLoading(false);\r\n        console.log(result);\r\n        if (!result.cancelled) {\r\n            setImages(result.uri ? [result.uri] : result.selected);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FlatList\r\n            data={images}\r\n            renderItem={({ item }) => (\r\n                <Image\r\n                    source={{ uri: item.uri }}\r\n                    style={{ width: width, height: 250 }}\r\n                    resizeMode={contain}\r\n                />\r\n            )}\r\n            numColumns={2}\r\n            keyExtractor={(item) => item.uri}\r\n            contentContainerStyle={{\r\n                marginVertical: 50,\r\n                paddingBottom: 100,\r\n                paddingHorizontal: 30,\r\n            }}\r\n            ListHeaderComponent={\r\n                isLoading ? (\r\n                    <View>\r\n                        <Text\r\n                            style={{\r\n                                fontSize: 20,\r\n                                fontWeight: 'bold',\r\n                                textAlign: 'center',\r\n                            }}\r\n                        >\r\n                            Loading...\r\n                        </Text>\r\n                        <ActivityIndicator size={'large'} />\r\n                    </View>\r\n                ) : (\r\n                    <Button title='Pick images' onPress={pickImage} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport { Gellery };\r\n"],"mappings":";;;;;;;;;;;;AAYA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;AAEA,SAASC,OAAT,OAAiC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC7B,gBAA4BJ,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOK,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAkCN,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOO,SAAP;EAAA,IAAkBC,YAAlB;;EACA,2BAAkBC,mBAAmB,EAArC;EAAA,IAAQC,KAAR,wBAAQA,KAAR;;EACA,IAAMC,SAAS;IAAA,8BAAG,aAAY;MAC1BH,YAAY,CAAC,IAAD,CAAZ;MACA,IAAII,MAAM,SAASV,WAAW,CAACW,uBAAZ,CAAoC;QACnDC,UAAU,EAAEZ,WAAW,CAACa,gBAAZ,CAA6BC,MADU;QAGnDC,uBAAuB,EAAE,IAH0B;QAInDC,cAAc,EAAE,EAJmC;QAKnDC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAL2C;QAMnDC,OAAO,EAAE;MAN0C,CAApC,CAAnB;MAQAZ,YAAY,CAAC,KAAD,CAAZ;MACAa,OAAO,CAACC,GAAR,CAAYV,MAAZ;;MACA,IAAI,CAACA,MAAM,CAACW,SAAZ,EAAuB;QACnBjB,SAAS,CAACM,MAAM,CAACY,GAAP,GAAa,CAACZ,MAAM,CAACY,GAAR,CAAb,GAA4BZ,MAAM,CAACa,QAApC,CAAT;MACH;IACJ,CAfc;;IAAA,gBAATd,SAAS;MAAA;IAAA;EAAA,GAAf;;EAiBA,OACI,KAAC,QAAD;IACI,IAAI,EAAEN,MADV;IAEI,UAAU,EAAE;MAAA,IAAGqB,IAAH,SAAGA,IAAH;MAAA,OACR,KAAC,KAAD;QACI,MAAM,EAAE;UAAEF,GAAG,EAAEE,IAAI,CAACF;QAAZ,CADZ;QAEI,KAAK,EAAE;UAAEd,KAAK,EAAEA,KAAT;UAAgBiB,MAAM,EAAE;QAAxB,CAFX;QAGI,UAAU,EAAEC;MAHhB,EADQ;IAAA,CAFhB;IASI,UAAU,EAAE,CAThB;IAUI,YAAY,EAAE,sBAACF,IAAD;MAAA,OAAUA,IAAI,CAACF,GAAf;IAAA,CAVlB;IAWI,qBAAqB,EAAE;MACnBK,cAAc,EAAE,EADG;MAEnBC,aAAa,EAAE,GAFI;MAGnBC,iBAAiB,EAAE;IAHA,CAX3B;IAgBI,mBAAmB,EACfxB,SAAS,GACL,MAAC,IAAD;MAAA,WACI,KAAC,IAAD;QACI,KAAK,EAAE;UACHyB,QAAQ,EAAE,EADP;UAEHC,UAAU,EAAE,MAFT;UAGHC,SAAS,EAAE;QAHR,CADX;QAAA;MAAA,EADJ,EAUI,KAAC,iBAAD;QAAmB,IAAI,EAAE;MAAzB,EAVJ;IAAA,EADK,GAcL,KAAC,MAAD;MAAQ,KAAK,EAAC,aAAd;MAA4B,OAAO,EAAEvB;IAArC;EA/BZ,EADJ;AAqCH;;AACD,IAAMwB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BC,SAAS,EAAE;IACPC,IAAI,EAAE,CADC;IAEPC,UAAU,EAAE,QAFL;IAGPC,cAAc,EAAE;EAHT;AADkB,CAAlB,CAAf;AAQA,SAAStC,OAAT"},"metadata":{},"sourceType":"module"}